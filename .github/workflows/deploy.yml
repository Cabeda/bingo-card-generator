name: Deploy to Production

on:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install dependencies
      run: bun install

    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-${{ hashFiles('**/*.ts', '**/*.tsx', '**/*.js', '**/*.jsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lock') }}-
          ${{ runner.os }}-nextjs-

    - name: Build application
      run: bun run build

    # Note: Vercel automatically deploys from the main branch
    # This workflow serves as a CI check before Vercel deployment
    # If you want to deploy to Vercel from GitHub Actions instead:
    # 1. Install Vercel CLI: bun add -g vercel
    # 2. Add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID to secrets
    # 3. Uncomment and configure the following step:
    #
    # - name: Deploy to Vercel
    #   run: |
    #     vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
    #   env:
    #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
